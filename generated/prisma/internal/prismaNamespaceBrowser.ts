
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"
export type * from '../models.js'
export type * from './prismaNamespace.js'
export const Decimal = runtime.Decimal
export const ModelName = {
  User: 'User',
  Post: 'Post',
  EmailVerification: 'EmailVerification',
  PasswordResetToken: 'PasswordResetToken',
  TwoFactorAuthentication: 'TwoFactorAuthentication'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/**
 * Enums
 */
export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  role: 'role',
  password: 'password',
  oauth2Provider: 'oauth2Provider',
  emailVerified: 'emailVerified',
  twoFactorAuthenticationEnabled: 'twoFactorAuthenticationEnabled'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const PostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  authorId: 'authorId'
} as const

export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


export const EmailVerificationScalarFieldEnum = {
  id: 'id',
  verificationToken: 'verificationToken',
  expiryDate: 'expiryDate',
  userId: 'userId'
} as const

export type EmailVerificationScalarFieldEnum = (typeof EmailVerificationScalarFieldEnum)[keyof typeof EmailVerificationScalarFieldEnum]


export const PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  expiryDate: 'expiryDate',
  userId: 'userId'
} as const

export type PasswordResetTokenScalarFieldEnum = (typeof PasswordResetTokenScalarFieldEnum)[keyof typeof PasswordResetTokenScalarFieldEnum]


export const TwoFactorAuthenticationScalarFieldEnum = {
  id: 'id',
  code: 'code',
  expiryDate: 'expiryDate',
  userId: 'userId'
} as const

export type TwoFactorAuthenticationScalarFieldEnum = (typeof TwoFactorAuthenticationScalarFieldEnum)[keyof typeof TwoFactorAuthenticationScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

